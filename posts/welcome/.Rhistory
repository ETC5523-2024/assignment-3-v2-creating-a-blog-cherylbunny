#| label: fig-att-cntry
#| fig-cap: "Average Attending Countries Over Time"
# Separate data set by type of Expo
expo_world <- worlds_fairs %>% filter(category == "World Expo")
# Load data from TidyTuesday
worlds_fairs <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-08-13/worlds_fairs.csv')
#| label: fig-att-cntry
#| fig-cap: "Average Attending Countries Over Time"
# Separate data set by type of Expo
expo_world <- worlds_fairs %>% filter(category == "World Expo")
library(tidyverse)
library(gridExtra)
library(tidytext)
library(gt)
#| label: fig-att-cntry
#| fig-cap: "Average Attending Countries Over Time"
# Separate data set by type of Expo
expo_world <- worlds_fairs %>% filter(category == "World Expo")
expo_spec <- worlds_fairs  %>% filter(category == "Specialised Expo")
# Calculate average attending countries per year for both Expo
avg_attend_world <- expo_world %>%
group_by(start_year) %>%
summarise(avg_countries = mean(attending_countries, na.rm = TRUE)) %>%
mutate(expo_type = "World Expo")
avg_attend_spec <- expo_spec %>%
group_by(start_year) %>%
summarise(avg_countries = mean(attending_countries, na.rm = TRUE)) %>%
mutate(expo_type = "Specialised Expo")
avg_attend_combined <- bind_rows(avg_attend_world, avg_attend_spec) %>%
mutate(avg_countries = round(avg_countries, 0))
# Visualise the trend of attendance over time
avg_attend_plot <- ggplot(avg_attend_combined, aes(x = start_year, y = avg_countries, color = expo_type)) +
geom_point(size = 2) +
theme_linedraw() +
ggtitle("Average Attending Countries Over Time") +
xlab("Year") +
ylab("Average Number of Attending Countries") +
scale_color_manual(name = "Exposition Type", values = c("World Expo" = "#00AFBB", "Specialised Expo" = "#FC4E07"))
print(avg_attend_plot)
#| label: fig-word-thm
#| fig-cap: "Top Words in Themes"
#| fig-pos: "H"
# Tokenize the themes
themes_words <- worlds_fairs %>%
unnest_tokens(word, theme) %>%
count(category, word, sort = TRUE) %>%
ungroup()
# Remove unnecessary words
themes_words <- themes_words %>%
anti_join(stop_words, by = "word")
# Get the top 10 most common words and plot them
top_words_world <- themes_words %>%
filter(category == "World Expo") %>%
top_n(10, n)
top_words_world_plot <- ggplot(top_words_world, aes(x = reorder(word, n), y = n)) +
geom_bar(stat = "identity", fill = "#00AFBB") +
coord_flip() +
xlab('Word') +
ylab('Frequency') +
theme_minimal()
top_words_spec <- themes_words %>%
filter(category == "Specialised Expo") %>%
top_n(10, n)
top_words_spec_plot <- ggplot(top_words_spec, aes(x = reorder(word, n), y = n)) +
geom_bar(stat = "identity", fill = "#FC4E07") +
coord_flip() +
xlab('Word') +
ylab('Frequency') +
theme_minimal()
grid.arrange(top_words_world_plot, top_words_spec_plot, ncol = 2)
